// <auto-generated />
using System;
using Koutye.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Koutye.Migrations
{
    [DbContext(typeof(KoutyeContext))]
    [Migration("20231202123048_ThirdCreate")]
    partial class ThirdCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppartementFerme", b =>
                {
                    b.Property<int>("appartementsid")
                        .HasColumnType("int");

                    b.Property<int>("fermesid")
                        .HasColumnType("int");

                    b.HasKey("appartementsid", "fermesid");

                    b.HasIndex("fermesid");

                    b.ToTable("AppartementFerme");
                });

            modelBuilder.Entity("Koutye.Models.Adresse", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("commune")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("departement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numero")
                        .HasColumnType("int");

                    b.Property<string>("pays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("adresse");
                });

            modelBuilder.Entity("Koutye.Models.Appartement", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("adresseid")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("utilisateurid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("adresseid");

                    b.HasIndex("utilisateurid");

                    b.ToTable("appartement");
                });

            modelBuilder.Entity("Koutye.Models.Ferme", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("debut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fin")
                        .HasColumnType("datetime2");

                    b.Property<double>("montant")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("ferme");
                });

            modelBuilder.Entity("Koutye.Models.ImageAppartement", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("appartementid")
                        .HasColumnType("int");

                    b.Property<string>("description_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("appartementid");

                    b.ToTable("imageAppartement");
                });

            modelBuilder.Entity("Koutye.Models.TypeUtilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("nomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("typeUtilisateur");
                });

            modelBuilder.Entity("Koutye.Models.Utilisateur", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("login_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("logoutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("modificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("typeUtilisateurId")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("typeUtilisateurId");

                    b.ToTable("utilisateur");
                });

            modelBuilder.Entity("Koutye.Models.VideoAppartement", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("appartementid")
                        .HasColumnType("int");

                    b.Property<string>("description_video")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("video")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("appartementid");

                    b.ToTable("videoAppartement");
                });

            modelBuilder.Entity("AppartementFerme", b =>
                {
                    b.HasOne("Koutye.Models.Appartement", null)
                        .WithMany()
                        .HasForeignKey("appartementsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Koutye.Models.Ferme", null)
                        .WithMany()
                        .HasForeignKey("fermesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Koutye.Models.Appartement", b =>
                {
                    b.HasOne("Koutye.Models.Adresse", "adresse")
                        .WithMany("appartements")
                        .HasForeignKey("adresseid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Koutye.Models.Utilisateur", "utilisateur")
                        .WithMany("appartements")
                        .HasForeignKey("utilisateurid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("adresse");

                    b.Navigation("utilisateur");
                });

            modelBuilder.Entity("Koutye.Models.ImageAppartement", b =>
                {
                    b.HasOne("Koutye.Models.Appartement", "appartement")
                        .WithMany("imageAppartements")
                        .HasForeignKey("appartementid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appartement");
                });

            modelBuilder.Entity("Koutye.Models.Utilisateur", b =>
                {
                    b.HasOne("Koutye.Models.TypeUtilisateur", "typeUtilisateur")
                        .WithMany("utilisateurs")
                        .HasForeignKey("typeUtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("typeUtilisateur");
                });

            modelBuilder.Entity("Koutye.Models.VideoAppartement", b =>
                {
                    b.HasOne("Koutye.Models.Appartement", "appartement")
                        .WithMany("videoAppartements")
                        .HasForeignKey("appartementid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appartement");
                });

            modelBuilder.Entity("Koutye.Models.Adresse", b =>
                {
                    b.Navigation("appartements");
                });

            modelBuilder.Entity("Koutye.Models.Appartement", b =>
                {
                    b.Navigation("imageAppartements");

                    b.Navigation("videoAppartements");
                });

            modelBuilder.Entity("Koutye.Models.TypeUtilisateur", b =>
                {
                    b.Navigation("utilisateurs");
                });

            modelBuilder.Entity("Koutye.Models.Utilisateur", b =>
                {
                    b.Navigation("appartements");
                });
#pragma warning restore 612, 618
        }
    }
}
